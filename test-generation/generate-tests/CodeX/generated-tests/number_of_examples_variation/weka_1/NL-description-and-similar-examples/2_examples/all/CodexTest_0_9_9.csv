prompt,output
"Suggest a test for a method with the AlgVector add(AlgVector other) signature.

Input: public final int numElements() {
      return m_Elements.length;
  }
Output: public void testLengthConstructor() {
    int len = 22;
    AlgVector v = new AlgVector(len);
    assertEquals(""Length differs"", len, v.numElements());
  }

Input: public final double getElement(int index) {
			return m_Elements[index];
		  }
Output: public void testArrayConstructor() {
			double[] data = {2.3, 1.2, 5.0};
			AlgVector v = new AlgVector(data);
			assertEquals('Length differs', data.length, v.numElements());
			for (int i = 0; i < data.length; i++)
			  assertEquals((i+1) + '. value differs', data[i], v.getElement(i));
		  }

Input: public final AlgVector add(AlgVector other) {
     AlgVector b = null;
    if (m_Elements != null) {
      int n = m_Elements.length;
       try {
	b = (AlgVector)clone();
      } catch (CloneNotSupportedException ex) {
	b = new AlgVector(n);
      }
          for(int i = 0; i < n; i++) {
	b.m_Elements[i] = m_Elements[i] + other.m_Elements[i];
      }
    }
       return b;
  }
Output:
  ","import weka.core.*;
import java.io.Serializable;
import java.util.Random;

import weka.core.*;
import java.util.Random;
import junit.framework.TestCase;
import junit.framework.TestSuite;
import static org.junit.Assert.*;
import org.junit.Test;

import org.junit.*;


public class CodexTest_0_9_9 { 
  @Test
  public void testAdd() {
    double[] dataA = {-3.0, 2.0, 0.0};
    double[] dataB = {3.0, -2.0, 0.0};
    double[] dataC = {0.0, 0.0, 0.0};
    AlgVector a = new AlgVector(dataA);
    AlgVector b = new AlgVector(dataB);
    AlgVector c = new AlgVector(dataC);
    AlgVector d = a.add(b);
    assertEquals(""Length differs"", a.numElements(), d.numElements());
    for(int i = 0; i < dataC.length; i++)
      assertEquals(""Diff"" + i, c.getElement(i), d.getElement(i));
    }
}"
