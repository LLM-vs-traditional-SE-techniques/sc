{
	"project": "Weka",
	"package": "weka.core",
	"class": "AlgVector",
	"method_signature": "Instance getAsInstance(Instances model, Random random)",
	"method": "public Instance getAsInstance(Instances model, Random random) \n    throws Exception {\n    Instance newInst = null;\n    if (m_Elements != null) {\n      newInst = new DenseInstance(model.numAttributes());\n      newInst.setDataset(model);\n            for (int i = 0, j = 0; i < model.numAttributes(); i++) {\n	if (model.attribute(i).isNumeric()) {\n	  if (j >= m_Elements.length)\n	    throw new Exception(\"Datatypes are not compatible.\"); \n	  newInst.setValue(i, m_Elements[j++]);\n	}\n	if (model.attribute(i).isNominal()) {\n	  int newVal = (int) \n	    (random.nextDouble() * (double) (model.attribute(i).numValues()));\n	  if (newVal == (int) model.attribute(i).numValues())\n	    newVal -= 1;\n	  newInst.setValue(i, newVal);\n	}\n      }\n    }\n    return newInst;\n  }",
	"helpers": ["java.io.Reader()", "java.util.Random()", "int numElements()", "AlgVector(int)", "Instances(Reader reader)"],
	"example_same_class": {
		"method_signature": "int numElements()",
		"method": "public final int numElements() {\n      return m_Elements.length;\n  }",
		"test": "public void testLengthConstructor() {\n    int len = 22;\n    AlgVector v = new AlgVector(len);\n    assertEquals(\"Length differs\", len, v.numElements());\n  }"
	},
	"example_different_project": {
		"id": "guava_1",
		"method_signature": "HashCode fromBytes(byte[] bytes)",
		"method": "public static HashCode fromBytes(byte[] bytes) {\n    checkArgument(bytes.length >= 1, \"A HashCode must contain at least 1 byte.\");\n    return fromBytesNoCopy(bytes.clone());\n  }",
		"test": "public void testRoundTripHashCodeUsingBaseEncoding() {\n    HashCode hash1 = Hashing.sha1().hashString(\"foo\", Charsets.US_ASCII);\n    HashCode hash2 = HashCode.fromBytes(BaseEncoding.base16().lowerCase().decode(hash1.toString()));\n    assertEquals(hash1, hash2);\n  }"
	},
	"method_class_imports": "import weka.core.*;\nimport java.io.Serializable;\nimport java.util.Random;",
	"test_class_imports": "import weka.core.*;\nimport java.util.Random;\nimport junit.framework.TestCase;\nimport junit.framework.TestSuite;"
}