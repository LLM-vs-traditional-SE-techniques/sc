isCompilable => false
CodexTest_0_9_8.java:26: error: cannot find symbol
    int numBytes = LENGTH * 8 / 5;
                   ^
  symbol:   variable LENGTH
  location: class CodexTest_0_9_8
CodexTest_0_9_8.java:27: error: cannot find symbol
    int numBits = LENGTH * 8 - numBytes * 5;
                  ^
  symbol:   variable LENGTH
  location: class CodexTest_0_9_8
CodexTest_0_9_8.java:29: error: package Bits does not exist
    Bits.LE.clear(dest, 0, dest.length);
        ^
CodexTest_0_9_8.java:33: error: cannot find symbol
    ImmutableBitArray b = BitArrays.fromLength(LENGTH);
    ^
  symbol:   class ImmutableBitArray
  location: class CodexTest_0_9_8
CodexTest_0_9_8.java:33: error: cannot find symbol
    ImmutableBitArray b = BitArrays.fromLength(LENGTH);
                                               ^
  symbol:   variable LENGTH
  location: class CodexTest_0_9_8
CodexTest_0_9_8.java:33: error: cannot find symbol
    ImmutableBitArray b = BitArrays.fromLength(LENGTH);
                          ^
  symbol:   variable BitArrays
  location: class CodexTest_0_9_8
CodexTest_0_9_8.java:35: error: no suitable method found for assertThat(int)
    assertThat(bitsWritten).isEqualTo(numBytes * 8);
    ^
    method org.junit.Assert.<T>assertThat(java.lang.String,T,org.hamcrest.Matcher<? super T>) is not applicable
      (cannot infer type-variable(s) T
        (actual and formal argument lists differ in length))
    method org.junit.Assert.<T>assertThat(T,org.hamcrest.Matcher<? super T>) is not applicable
      (cannot infer type-variable(s) T
        (actual and formal argument lists differ in length))
CodexTest_0_9_8.java:43: error: cannot find symbol
        if (BitArrays.get(b, i * 8 + j + 5)) {
            ^
  symbol:   variable BitArrays
  location: class CodexTest_0_9_8
CodexTest_0_9_8.java:47: error: no suitable method found for assertThat(byte)
      assertThat(dest[i]).isEqualTo((byte) expectedByteValue);
      ^
    method org.junit.Assert.<T>assertThat(java.lang.String,T,org.hamcrest.Matcher<? super T>) is not applicable
      (cannot infer type-variable(s) T
        (actual and formal argument lists differ in length))
    method org.junit.Assert.<T>assertThat(T,org.hamcrest.Matcher<? super T>) is not applicable
      (cannot infer type-variable(s) T
        (actual and formal argument lists differ in length))