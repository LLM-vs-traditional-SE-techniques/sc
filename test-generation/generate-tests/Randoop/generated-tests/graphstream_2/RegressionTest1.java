import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest1 {

    public static boolean debug = false;

    @Test
    public void test02() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test02");
        org.graphstream.graph.Path path0 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path1 = new org.graphstream.graph.Path();
        boolean boolean2 = path0.equals(path1);
        org.graphstream.graph.Path path3 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path4 = new org.graphstream.graph.Path();
        boolean boolean5 = path3.equals(path4);
        org.graphstream.graph.Path path6 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path7 = new org.graphstream.graph.Path();
        boolean boolean8 = path6.equals(path7);
        boolean boolean9 = path3.equals(path7);
        org.graphstream.graph.Path path10 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path11 = new org.graphstream.graph.Path();
        boolean boolean12 = path10.equals(path11);
        org.graphstream.graph.Path path13 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path14 = new org.graphstream.graph.Path();
        boolean boolean15 = path13.equals(path14);
        boolean boolean16 = path10.equals(path14);
        boolean boolean17 = path3.equals(path10);
        boolean boolean18 = path1.equals(path10);
        org.graphstream.graph.Path path19 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path20 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path21 = new org.graphstream.graph.Path();
        boolean boolean22 = path20.equals(path21);
        org.graphstream.graph.Path path23 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path24 = new org.graphstream.graph.Path();
        boolean boolean25 = path23.equals(path24);
        org.graphstream.graph.Path path26 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path27 = new org.graphstream.graph.Path();
        boolean boolean28 = path26.equals(path27);
        boolean boolean29 = path23.equals(path27);
        org.graphstream.graph.Path path30 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path31 = new org.graphstream.graph.Path();
        boolean boolean32 = path30.equals(path31);
        org.graphstream.graph.Path path33 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path34 = new org.graphstream.graph.Path();
        boolean boolean35 = path33.equals(path34);
        boolean boolean36 = path30.equals(path34);
        boolean boolean37 = path23.equals(path30);
        boolean boolean38 = path21.equals(path30);
        boolean boolean39 = path19.equals(path21);
        org.graphstream.graph.Path path40 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path41 = new org.graphstream.graph.Path();
        boolean boolean42 = path40.equals(path41);
        org.graphstream.graph.Path path43 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path44 = new org.graphstream.graph.Path();
        boolean boolean45 = path43.equals(path44);
        boolean boolean46 = path40.equals(path44);
        org.graphstream.graph.Path path47 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path48 = new org.graphstream.graph.Path();
        boolean boolean49 = path47.equals(path48);
        org.graphstream.graph.Path path50 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path51 = new org.graphstream.graph.Path();
        boolean boolean52 = path50.equals(path51);
        boolean boolean53 = path47.equals(path51);
        boolean boolean54 = path44.equals(path51);
        boolean boolean55 = path19.equals(path44);
        boolean boolean56 = path10.equals(path44);
        org.graphstream.graph.Path path57 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path58 = new org.graphstream.graph.Path();
        boolean boolean59 = path57.equals(path58);
        org.graphstream.graph.Path path60 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path61 = new org.graphstream.graph.Path();
        boolean boolean62 = path60.equals(path61);
        org.graphstream.graph.Path path63 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path64 = new org.graphstream.graph.Path();
        boolean boolean65 = path63.equals(path64);
        boolean boolean66 = path60.equals(path64);
        org.graphstream.graph.Path path67 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path68 = new org.graphstream.graph.Path();
        boolean boolean69 = path67.equals(path68);
        org.graphstream.graph.Path path70 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path71 = new org.graphstream.graph.Path();
        boolean boolean72 = path70.equals(path71);
        boolean boolean73 = path67.equals(path71);
        boolean boolean74 = path60.equals(path67);
        boolean boolean75 = path58.equals(path67);
        org.graphstream.graph.Path path76 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path77 = new org.graphstream.graph.Path();
        boolean boolean78 = path76.equals(path77);
        org.graphstream.graph.Path path79 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path80 = new org.graphstream.graph.Path();
        boolean boolean81 = path79.equals(path80);
        org.graphstream.graph.Path path82 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path83 = new org.graphstream.graph.Path();
        boolean boolean84 = path82.equals(path83);
        boolean boolean85 = path79.equals(path83);
        org.graphstream.graph.Path path86 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path87 = new org.graphstream.graph.Path();
        boolean boolean88 = path86.equals(path87);
        org.graphstream.graph.Path path89 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path90 = new org.graphstream.graph.Path();
        boolean boolean91 = path89.equals(path90);
        boolean boolean92 = path86.equals(path90);
        boolean boolean93 = path79.equals(path86);
        boolean boolean94 = path77.equals(path79);
        boolean boolean95 = path67.equals(path79);
        boolean boolean96 = path10.equals(path67);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
    }
}

