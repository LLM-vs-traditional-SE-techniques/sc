isCompilable => false
CodexTest_0_9_10.java:17: error: illegal start of type
            for (int i = 0, j = 0; i < model.numAttributes(); i++) {
            ^
CodexTest_0_9_10.java:17: error: ')' expected
            for (int i = 0, j = 0; i < model.numAttributes(); i++) {
                      ^
CodexTest_0_9_10.java:17: error: illegal start of type
            for (int i = 0, j = 0; i < model.numAttributes(); i++) {
                         ^
CodexTest_0_9_10.java:17: error: <identifier> expected
            for (int i = 0, j = 0; i < model.numAttributes(); i++) {
                          ^
CodexTest_0_9_10.java:17: error: ';' expected
            for (int i = 0, j = 0; i < model.numAttributes(); i++) {
                           ^
CodexTest_0_9_10.java:17: error: illegal start of type
            for (int i = 0, j = 0; i < model.numAttributes(); i++) {
                              ^
CodexTest_0_9_10.java:17: error: <identifier> expected
            for (int i = 0, j = 0; i < model.numAttributes(); i++) {
                               ^
CodexTest_0_9_10.java:17: error: > expected
            for (int i = 0, j = 0; i < model.numAttributes(); i++) {
                                                          ^
CodexTest_0_9_10.java:17: error: ';' expected
            for (int i = 0, j = 0; i < model.numAttributes(); i++) {
                                                           ^
CodexTest_0_9_10.java:17: error: <identifier> expected
            for (int i = 0, j = 0; i < model.numAttributes(); i++) {
                                                               ^
CodexTest_0_9_10.java:17: error: illegal start of type
            for (int i = 0, j = 0; i < model.numAttributes(); i++) {
                                                                 ^
CodexTest_0_9_10.java:17: error: <identifier> expected
            for (int i = 0, j = 0; i < model.numAttributes(); i++) {
                                                                  ^
CodexTest_0_9_10.java:17: error: ';' expected
            for (int i = 0, j = 0; i < model.numAttributes(); i++) {
                                                                    ^
CodexTest_0_9_10.java:18: error: illegal start of type
	if (model.attribute(i).isNumeric()) {
	   ^
CodexTest_0_9_10.java:18: error: ';' expected
	if (model.attribute(i).isNumeric()) {
	         ^
CodexTest_0_9_10.java:18: error: invalid method declaration; return type required
	if (model.attribute(i).isNumeric()) {
	          ^
CodexTest_0_9_10.java:18: error: <identifier> expected
	if (model.attribute(i).isNumeric()) {
	                     ^
CodexTest_0_9_10.java:18: error: ';' expected
	if (model.attribute(i).isNumeric()) {
	                      ^
CodexTest_0_9_10.java:23: error: illegal start of type
	if (model.attribute(i).isNominal()) {
	^
CodexTest_0_9_10.java:23: error: <identifier> expected
	if (model.attribute(i).isNominal()) {
	                   ^
CodexTest_0_9_10.java:23: error: ';' expected
	if (model.attribute(i).isNominal()) {
	                    ^
CodexTest_0_9_10.java:23: error: illegal start of type
	if (model.attribute(i).isNominal()) {
	                     ^
CodexTest_0_9_10.java:23: error: <identifier> expected
	if (model.attribute(i).isNominal()) {
	                      ^
CodexTest_0_9_10.java:23: error: ';' expected
	if (model.attribute(i).isNominal()) {
	                       ^
CodexTest_0_9_10.java:23: error: illegal start of type
	if (model.attribute(i).isNominal()) {
	                                ^
CodexTest_0_9_10.java:23: error: <identifier> expected
	if (model.attribute(i).isNominal()) {
	                                 ^
CodexTest_0_9_10.java:23: error: ';' expected
	if (model.attribute(i).isNominal()) {
	                                  ^
CodexTest_0_9_10.java:31: error: class, interface, or enum expected
    }
    ^
CodexTest_0_9_10.java:33: error: class, interface, or enum expected
  }
  ^
CodexTest_0_9_10.java:34: error: unclosed string literal
"
^