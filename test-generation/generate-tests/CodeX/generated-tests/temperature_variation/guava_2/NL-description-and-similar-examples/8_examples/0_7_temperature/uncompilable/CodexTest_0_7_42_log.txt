isCompilable => false
CodexTest_0_7_42.java:26: error: cannot find symbol
    Random random = new Random(0);
    ^
  symbol:   class Random
  location: class CodexTest_0_7_42
CodexTest_0_7_42.java:26: error: cannot find symbol
    Random random = new Random(0);
                        ^
  symbol:   class Random
  location: class CodexTest_0_7_42
CodexTest_0_7_42.java:29: error: cannot find symbol
      BitArray bitArray = BitArray.create(numBits);
      ^
  symbol:   class BitArray
  location: class CodexTest_0_7_42
CodexTest_0_7_42.java:29: error: cannot find symbol
      BitArray bitArray = BitArray.create(numBits);
                          ^
  symbol:   variable BitArray
  location: class CodexTest_0_7_42
CodexTest_0_7_42.java:35: error: no suitable method found for assertThat(int)
      assertThat(actualMaxLength).isEqualTo(Ints.min(maxLength, numBits / 8));
      ^
    method org.junit.Assert.<T>assertThat(java.lang.String,T,org.hamcrest.Matcher<? super T>) is not applicable
      (cannot infer type-variable(s) T
        (actual and formal argument lists differ in length))
    method org.junit.Assert.<T>assertThat(T,org.hamcrest.Matcher<? super T>) is not applicable
      (cannot infer type-variable(s) T
        (actual and formal argument lists differ in length))
CodexTest_0_7_42.java:39: error: no suitable method found for assertThat(byte[])
      assertThat(actual).isEqualTo(expected);
      ^
    method org.junit.Assert.<T>assertThat(java.lang.String,T,org.hamcrest.Matcher<? super T>) is not applicable
      (cannot infer type-variable(s) T
        (actual and formal argument lists differ in length))
    method org.junit.Assert.<T>assertThat(T,org.hamcrest.Matcher<? super T>) is not applicable
      (cannot infer type-variable(s) T
        (actual and formal argument lists differ in length))