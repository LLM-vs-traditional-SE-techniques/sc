import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest22 {

    public static boolean debug = false;

    @Test
    public void test23() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test23");
        org.graphstream.graph.Path path0 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path1 = new org.graphstream.graph.Path();
        boolean boolean2 = path0.equals(path1);
        org.graphstream.graph.Path path3 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path4 = new org.graphstream.graph.Path();
        boolean boolean5 = path3.equals(path4);
        org.graphstream.graph.Path path6 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path7 = new org.graphstream.graph.Path();
        boolean boolean8 = path6.equals(path7);
        boolean boolean9 = path3.equals(path7);
        org.graphstream.graph.Path path10 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path11 = new org.graphstream.graph.Path();
        boolean boolean12 = path10.equals(path11);
        org.graphstream.graph.Path path13 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path14 = new org.graphstream.graph.Path();
        boolean boolean15 = path13.equals(path14);
        boolean boolean16 = path10.equals(path14);
        boolean boolean17 = path3.equals(path10);
        boolean boolean18 = path1.equals(path10);
        org.graphstream.graph.Path path19 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path20 = new org.graphstream.graph.Path();
        boolean boolean21 = path19.equals(path20);
        org.graphstream.graph.Path path22 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path23 = new org.graphstream.graph.Path();
        boolean boolean24 = path22.equals(path23);
        org.graphstream.graph.Path path25 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path26 = new org.graphstream.graph.Path();
        boolean boolean27 = path25.equals(path26);
        boolean boolean28 = path22.equals(path26);
        org.graphstream.graph.Path path29 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path30 = new org.graphstream.graph.Path();
        boolean boolean31 = path29.equals(path30);
        org.graphstream.graph.Path path32 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path33 = new org.graphstream.graph.Path();
        boolean boolean34 = path32.equals(path33);
        boolean boolean35 = path29.equals(path33);
        boolean boolean36 = path22.equals(path29);
        boolean boolean37 = path20.equals(path22);
        boolean boolean38 = path10.equals(path22);
        org.graphstream.graph.Path path39 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path40 = new org.graphstream.graph.Path();
        boolean boolean41 = path39.equals(path40);
        org.graphstream.graph.Path path42 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path43 = new org.graphstream.graph.Path();
        boolean boolean44 = path42.equals(path43);
        org.graphstream.graph.Path path45 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path46 = new org.graphstream.graph.Path();
        boolean boolean47 = path45.equals(path46);
        boolean boolean48 = path42.equals(path46);
        org.graphstream.graph.Path path49 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path50 = new org.graphstream.graph.Path();
        boolean boolean51 = path49.equals(path50);
        org.graphstream.graph.Path path52 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path53 = new org.graphstream.graph.Path();
        boolean boolean54 = path52.equals(path53);
        boolean boolean55 = path49.equals(path53);
        boolean boolean56 = path42.equals(path49);
        boolean boolean57 = path40.equals(path42);
        org.graphstream.graph.Path path58 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path59 = new org.graphstream.graph.Path();
        boolean boolean60 = path58.equals(path59);
        boolean boolean61 = path42.equals(path58);
        org.graphstream.graph.Path path62 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path63 = new org.graphstream.graph.Path();
        boolean boolean64 = path62.equals(path63);
        org.graphstream.graph.Path path65 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path66 = new org.graphstream.graph.Path();
        boolean boolean67 = path65.equals(path66);
        boolean boolean68 = path62.equals(path66);
        org.graphstream.graph.Path path69 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path70 = new org.graphstream.graph.Path();
        boolean boolean71 = path69.equals(path70);
        org.graphstream.graph.Path path72 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path73 = new org.graphstream.graph.Path();
        boolean boolean74 = path72.equals(path73);
        boolean boolean75 = path69.equals(path73);
        boolean boolean76 = path66.equals(path73);
        org.graphstream.graph.Path path77 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path78 = new org.graphstream.graph.Path();
        boolean boolean79 = path77.equals(path78);
        boolean boolean80 = path73.equals(path77);
        boolean boolean81 = path42.equals(path73);
        boolean boolean82 = path22.equals(path73);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
    }
}

