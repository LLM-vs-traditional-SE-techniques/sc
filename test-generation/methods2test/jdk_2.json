{
	"project": "JDK",
	"package": "java.util",
	"class": "ArrayList",
	"method_signature": "boolean contains(Object o)",
	"method": "public boolean contains(Object o) {\n        return indexOf(o) >= 0;\n    }",
	"helpers": ["ArrayList()"],
	"example_same_class": {
		"method_signature": "ArrayList()",
		"method": "public ArrayList() {\n        this.elementData = DEFAULTCAPACITY_EMPTY_ELEMENTDATA;\n    }",
		"test": "public void emptyArraysAreShared() {        assertSame(new ArrayList<Object>(), new ArrayList<Object>());\n    }"
	},
	"example_different_project" : {
		"id": "guava_1",
		"method_signature": "HashCode fromBytes(byte[] bytes)",
		"method": "public static HashCode fromBytes(byte[] bytes) {\n    checkArgument(bytes.length >= 1, \"A HashCode must contain at least 1 byte.\");\n    return fromBytesNoCopy(bytes.clone());\n  }",
		"test": "public void testRoundTripHashCodeUsingBaseEncoding() {\n    HashCode hash1 = Hashing.sha1().hashString(\"foo\", Charsets.US_ASCII);\n    HashCode hash2 = HashCode.fromBytes(BaseEncoding.base16().lowerCase().decode(hash1.toString()));\n    assertEquals(hash1, hash2);\n  }"
	},
	"method_class_imports": "import java.util.*;\nimport java.util.function.Consumer;\nimport java.util.function.Predicate;\nimport java.util.function.UnaryOperator;",
	"test_class_imports": "import java.lang.reflect.Field;\nimport java.util.AbstractList;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.List;\nimport java.util.SplittableRandom;"
}