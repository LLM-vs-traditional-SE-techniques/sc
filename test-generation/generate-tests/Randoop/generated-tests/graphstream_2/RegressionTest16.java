import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest16 {

    public static boolean debug = false;

    @Test
    public void test17() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test17");
        org.graphstream.graph.Path path0 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path1 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path2 = new org.graphstream.graph.Path();
        boolean boolean3 = path1.equals(path2);
        org.graphstream.graph.Path path4 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path5 = new org.graphstream.graph.Path();
        boolean boolean6 = path4.equals(path5);
        boolean boolean7 = path1.equals(path5);
        boolean boolean8 = path0.equals(path1);
        org.graphstream.graph.Path path9 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path10 = new org.graphstream.graph.Path();
        boolean boolean11 = path9.equals(path10);
        org.graphstream.graph.Path path12 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path13 = new org.graphstream.graph.Path();
        boolean boolean14 = path12.equals(path13);
        org.graphstream.graph.Path path15 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path16 = new org.graphstream.graph.Path();
        boolean boolean17 = path15.equals(path16);
        boolean boolean18 = path12.equals(path16);
        org.graphstream.graph.Path path19 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path20 = new org.graphstream.graph.Path();
        boolean boolean21 = path19.equals(path20);
        org.graphstream.graph.Path path22 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path23 = new org.graphstream.graph.Path();
        boolean boolean24 = path22.equals(path23);
        boolean boolean25 = path19.equals(path23);
        boolean boolean26 = path12.equals(path19);
        boolean boolean27 = path10.equals(path12);
        boolean boolean28 = path0.equals(path10);
        org.graphstream.graph.Path path29 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path30 = new org.graphstream.graph.Path();
        boolean boolean31 = path29.equals(path30);
        boolean boolean32 = path0.equals(path30);
        org.graphstream.graph.Path path33 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path34 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path35 = new org.graphstream.graph.Path();
        boolean boolean36 = path34.equals(path35);
        org.graphstream.graph.Path path37 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path38 = new org.graphstream.graph.Path();
        boolean boolean39 = path37.equals(path38);
        org.graphstream.graph.Path path40 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path41 = new org.graphstream.graph.Path();
        boolean boolean42 = path40.equals(path41);
        boolean boolean43 = path37.equals(path41);
        org.graphstream.graph.Path path44 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path45 = new org.graphstream.graph.Path();
        boolean boolean46 = path44.equals(path45);
        org.graphstream.graph.Path path47 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path48 = new org.graphstream.graph.Path();
        boolean boolean49 = path47.equals(path48);
        boolean boolean50 = path44.equals(path48);
        boolean boolean51 = path37.equals(path44);
        boolean boolean52 = path35.equals(path44);
        boolean boolean53 = path33.equals(path35);
        org.graphstream.graph.Path path54 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path55 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path56 = new org.graphstream.graph.Path();
        boolean boolean57 = path55.equals(path56);
        org.graphstream.graph.Path path58 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path59 = new org.graphstream.graph.Path();
        boolean boolean60 = path58.equals(path59);
        boolean boolean61 = path55.equals(path59);
        boolean boolean62 = path54.equals(path55);
        boolean boolean63 = path35.equals(path55);
        org.graphstream.graph.Path path64 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path65 = new org.graphstream.graph.Path();
        boolean boolean66 = path64.equals(path65);
        org.graphstream.graph.Path path67 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path68 = new org.graphstream.graph.Path();
        boolean boolean69 = path67.equals(path68);
        boolean boolean70 = path64.equals(path68);
        org.graphstream.graph.Path path71 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path72 = new org.graphstream.graph.Path();
        boolean boolean73 = path71.equals(path72);
        org.graphstream.graph.Path path74 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path75 = new org.graphstream.graph.Path();
        boolean boolean76 = path74.equals(path75);
        boolean boolean77 = path71.equals(path75);
        boolean boolean78 = path68.equals(path75);
        org.graphstream.graph.Path path79 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path80 = new org.graphstream.graph.Path();
        boolean boolean81 = path79.equals(path80);
        boolean boolean82 = path75.equals(path79);
        boolean boolean83 = path35.equals(path75);
        boolean boolean84 = path30.equals(path35);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }
}

