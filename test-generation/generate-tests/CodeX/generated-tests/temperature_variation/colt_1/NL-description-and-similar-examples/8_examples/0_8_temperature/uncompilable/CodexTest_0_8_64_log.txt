isCompilable => false
CodexTest_0_8_64.java:35: error: illegal start of expression
    for (int i=0; i<SIZE; ++i) assertEquals("V.assign(double[]).toArray()["+i+],expected[i],actual[i],TOL);
                                                                              ^
CodexTest_0_8_64.java:35: error: ';' expected
    for (int i=0; i<SIZE; ++i) assertEquals("V.assign(double[]).toArray()["+i+],expected[i],actual[i],TOL);
                                                                               ^
CodexTest_0_8_64.java:35: error: not a statement
    for (int i=0; i<SIZE; ++i) assertEquals("V.assign(double[]).toArray()["+i+],expected[i],actual[i],TOL);
                                                                                        ^
CodexTest_0_8_64.java:35: error: ';' expected
    for (int i=0; i<SIZE; ++i) assertEquals("V.assign(double[]).toArray()["+i+],expected[i],actual[i],TOL);
                                                                                           ^
CodexTest_0_8_64.java:35: error: not a statement
    for (int i=0; i<SIZE; ++i) assertEquals("V.assign(double[]).toArray()["+i+],expected[i],actual[i],TOL);
                                                                                                  ^
CodexTest_0_8_64.java:35: error: ';' expected
    for (int i=0; i<SIZE; ++i) assertEquals("V.assign(double[]).toArray()["+i+],expected[i],actual[i],TOL);
                                                                                                     ^
CodexTest_0_8_64.java:35: error: not a statement
    for (int i=0; i<SIZE; ++i) assertEquals("V.assign(double[]).toArray()["+i+],expected[i],actual[i],TOL);
                                                                                                      ^
CodexTest_0_8_64.java:35: error: ';' expected
    for (int i=0; i<SIZE; ++i) assertEquals("V.assign(double[]).toArray()["+i+],expected[i],actual[i],TOL);
                                                                                                         ^