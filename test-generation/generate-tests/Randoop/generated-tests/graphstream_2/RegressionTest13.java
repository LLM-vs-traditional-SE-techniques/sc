import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest13 {

    public static boolean debug = false;

    @Test
    public void test14() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test14");
        org.graphstream.graph.Path path0 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path1 = new org.graphstream.graph.Path();
        boolean boolean2 = path0.equals(path1);
        org.graphstream.graph.Path path3 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path4 = new org.graphstream.graph.Path();
        boolean boolean5 = path3.equals(path4);
        boolean boolean6 = path0.equals(path4);
        org.graphstream.graph.Path path7 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path8 = new org.graphstream.graph.Path();
        boolean boolean9 = path7.equals(path8);
        org.graphstream.graph.Path path10 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path11 = new org.graphstream.graph.Path();
        boolean boolean12 = path10.equals(path11);
        boolean boolean13 = path7.equals(path11);
        boolean boolean14 = path4.equals(path11);
        org.graphstream.graph.Path path15 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path16 = new org.graphstream.graph.Path();
        boolean boolean17 = path15.equals(path16);
        boolean boolean18 = path11.equals(path15);
        org.graphstream.graph.Path path19 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path20 = new org.graphstream.graph.Path();
        boolean boolean21 = path19.equals(path20);
        org.graphstream.graph.Path path22 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path23 = new org.graphstream.graph.Path();
        boolean boolean24 = path22.equals(path23);
        org.graphstream.graph.Path path25 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path26 = new org.graphstream.graph.Path();
        boolean boolean27 = path25.equals(path26);
        boolean boolean28 = path22.equals(path26);
        org.graphstream.graph.Path path29 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path30 = new org.graphstream.graph.Path();
        boolean boolean31 = path29.equals(path30);
        org.graphstream.graph.Path path32 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path33 = new org.graphstream.graph.Path();
        boolean boolean34 = path32.equals(path33);
        boolean boolean35 = path29.equals(path33);
        boolean boolean36 = path22.equals(path29);
        boolean boolean37 = path20.equals(path29);
        org.graphstream.graph.Path path38 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path39 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path40 = new org.graphstream.graph.Path();
        boolean boolean41 = path39.equals(path40);
        org.graphstream.graph.Path path42 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path43 = new org.graphstream.graph.Path();
        boolean boolean44 = path42.equals(path43);
        org.graphstream.graph.Path path45 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path46 = new org.graphstream.graph.Path();
        boolean boolean47 = path45.equals(path46);
        boolean boolean48 = path42.equals(path46);
        org.graphstream.graph.Path path49 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path50 = new org.graphstream.graph.Path();
        boolean boolean51 = path49.equals(path50);
        org.graphstream.graph.Path path52 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path53 = new org.graphstream.graph.Path();
        boolean boolean54 = path52.equals(path53);
        boolean boolean55 = path49.equals(path53);
        boolean boolean56 = path42.equals(path49);
        boolean boolean57 = path40.equals(path49);
        boolean boolean58 = path38.equals(path40);
        org.graphstream.graph.Path path59 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path60 = new org.graphstream.graph.Path();
        boolean boolean61 = path59.equals(path60);
        org.graphstream.graph.Path path62 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path63 = new org.graphstream.graph.Path();
        boolean boolean64 = path62.equals(path63);
        boolean boolean65 = path59.equals(path63);
        org.graphstream.graph.Path path66 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path67 = new org.graphstream.graph.Path();
        boolean boolean68 = path66.equals(path67);
        org.graphstream.graph.Path path69 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path70 = new org.graphstream.graph.Path();
        boolean boolean71 = path69.equals(path70);
        boolean boolean72 = path66.equals(path70);
        boolean boolean73 = path63.equals(path70);
        boolean boolean74 = path38.equals(path63);
        boolean boolean75 = path29.equals(path63);
        org.graphstream.graph.Path path76 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path77 = new org.graphstream.graph.Path();
        boolean boolean78 = path76.equals(path77);
        org.graphstream.graph.Path path79 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path80 = new org.graphstream.graph.Path();
        boolean boolean81 = path79.equals(path80);
        org.graphstream.graph.Path path82 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path83 = new org.graphstream.graph.Path();
        boolean boolean84 = path82.equals(path83);
        boolean boolean85 = path79.equals(path83);
        org.graphstream.graph.Path path86 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path87 = new org.graphstream.graph.Path();
        boolean boolean88 = path86.equals(path87);
        org.graphstream.graph.Path path89 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path90 = new org.graphstream.graph.Path();
        boolean boolean91 = path89.equals(path90);
        boolean boolean92 = path86.equals(path90);
        boolean boolean93 = path79.equals(path86);
        boolean boolean94 = path77.equals(path79);
        boolean boolean95 = path29.equals(path79);
        boolean boolean96 = path11.equals(path29);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
    }
}

