import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest12 {

    public static boolean debug = false;

    @Test
    public void test13() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test13");
        org.graphstream.graph.Path path0 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path1 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path2 = new org.graphstream.graph.Path();
        boolean boolean3 = path1.equals(path2);
        org.graphstream.graph.Path path4 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path5 = new org.graphstream.graph.Path();
        boolean boolean6 = path4.equals(path5);
        boolean boolean7 = path1.equals(path5);
        boolean boolean8 = path0.equals(path1);
        org.graphstream.graph.Path path9 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path10 = new org.graphstream.graph.Path();
        boolean boolean11 = path9.equals(path10);
        org.graphstream.graph.Path path12 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path13 = new org.graphstream.graph.Path();
        boolean boolean14 = path12.equals(path13);
        boolean boolean15 = path9.equals(path13);
        org.graphstream.graph.Path path16 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path17 = new org.graphstream.graph.Path();
        boolean boolean18 = path16.equals(path17);
        org.graphstream.graph.Path path19 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path20 = new org.graphstream.graph.Path();
        boolean boolean21 = path19.equals(path20);
        boolean boolean22 = path16.equals(path20);
        boolean boolean23 = path13.equals(path20);
        org.graphstream.graph.Path path24 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path25 = new org.graphstream.graph.Path();
        boolean boolean26 = path24.equals(path25);
        org.graphstream.graph.Path path27 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path28 = new org.graphstream.graph.Path();
        boolean boolean29 = path27.equals(path28);
        boolean boolean30 = path24.equals(path28);
        org.graphstream.graph.Path path31 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path32 = new org.graphstream.graph.Path();
        boolean boolean33 = path31.equals(path32);
        boolean boolean34 = path24.equals(path31);
        org.graphstream.graph.Path path35 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path36 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path37 = new org.graphstream.graph.Path();
        boolean boolean38 = path36.equals(path37);
        org.graphstream.graph.Path path39 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path40 = new org.graphstream.graph.Path();
        boolean boolean41 = path39.equals(path40);
        org.graphstream.graph.Path path42 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path43 = new org.graphstream.graph.Path();
        boolean boolean44 = path42.equals(path43);
        boolean boolean45 = path39.equals(path43);
        org.graphstream.graph.Path path46 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path47 = new org.graphstream.graph.Path();
        boolean boolean48 = path46.equals(path47);
        org.graphstream.graph.Path path49 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path50 = new org.graphstream.graph.Path();
        boolean boolean51 = path49.equals(path50);
        boolean boolean52 = path46.equals(path50);
        boolean boolean53 = path39.equals(path46);
        boolean boolean54 = path37.equals(path46);
        boolean boolean55 = path35.equals(path37);
        org.graphstream.graph.Path path56 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path57 = new org.graphstream.graph.Path();
        boolean boolean58 = path56.equals(path57);
        org.graphstream.graph.Path path59 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path60 = new org.graphstream.graph.Path();
        boolean boolean61 = path59.equals(path60);
        boolean boolean62 = path56.equals(path60);
        org.graphstream.graph.Path path63 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path64 = new org.graphstream.graph.Path();
        boolean boolean65 = path63.equals(path64);
        org.graphstream.graph.Path path66 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path67 = new org.graphstream.graph.Path();
        boolean boolean68 = path66.equals(path67);
        boolean boolean69 = path63.equals(path67);
        boolean boolean70 = path60.equals(path67);
        boolean boolean71 = path35.equals(path60);
        boolean boolean72 = path24.equals(path60);
        org.graphstream.graph.Path path73 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path74 = new org.graphstream.graph.Path();
        boolean boolean75 = path73.equals(path74);
        org.graphstream.graph.Path path76 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path77 = new org.graphstream.graph.Path();
        boolean boolean78 = path76.equals(path77);
        org.graphstream.graph.Path path79 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path80 = new org.graphstream.graph.Path();
        boolean boolean81 = path79.equals(path80);
        boolean boolean82 = path76.equals(path80);
        org.graphstream.graph.Path path83 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path84 = new org.graphstream.graph.Path();
        boolean boolean85 = path83.equals(path84);
        org.graphstream.graph.Path path86 = new org.graphstream.graph.Path();
        org.graphstream.graph.Path path87 = new org.graphstream.graph.Path();
        boolean boolean88 = path86.equals(path87);
        boolean boolean89 = path83.equals(path87);
        boolean boolean90 = path76.equals(path83);
        boolean boolean91 = path74.equals(path83);
        boolean boolean92 = path24.equals(path74);
        boolean boolean93 = path13.equals(path74);
        boolean boolean94 = path1.equals(path74);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
    }
}

