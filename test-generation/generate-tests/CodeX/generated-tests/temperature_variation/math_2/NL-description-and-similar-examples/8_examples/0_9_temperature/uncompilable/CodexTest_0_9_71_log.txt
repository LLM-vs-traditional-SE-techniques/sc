isCompilable => false
CodexTest_0_9_71.java:31: error: cannot find symbol
        final AbsoluteDate date = AbsoluteDate.J2000_EPOCH;
              ^
  symbol:   class AbsoluteDate
  location: class CodexTest_0_9_71
CodexTest_0_9_71.java:31: error: cannot find symbol
        final AbsoluteDate date = AbsoluteDate.J2000_EPOCH;
                                  ^
  symbol:   variable AbsoluteDate
  location: class CodexTest_0_9_71
CodexTest_0_9_71.java:32: error: no suitable constructor found for Vector1D(double,double,double)
        final Vector1D p = new Vector1D(1.0, 1.0, 0.0);
                           ^
    constructor org.apache.commons.math3.geometry.euclidean.oned.Vector1D.Vector1D(double) is not applicable
      (actual and formal argument lists differ in length)
    constructor org.apache.commons.math3.geometry.euclidean.oned.Vector1D.Vector1D(double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D) is not applicable
      (actual and formal argument lists differ in length)
    constructor org.apache.commons.math3.geometry.euclidean.oned.Vector1D.Vector1D(double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D) is not applicable
      (actual and formal argument lists differ in length)
    constructor org.apache.commons.math3.geometry.euclidean.oned.Vector1D.Vector1D(double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D) is not applicable
      (actual and formal argument lists differ in length)
    constructor org.apache.commons.math3.geometry.euclidean.oned.Vector1D.Vector1D(double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D) is not applicable
      (actual and formal argument lists differ in length)
CodexTest_0_9_71.java:33: error: no suitable constructor found for Vector1D(double,double,double)
        Vector1D pStart = new Vector1D(12.0, -13.0, -2.0);
                          ^
    constructor org.apache.commons.math3.geometry.euclidean.oned.Vector1D.Vector1D(double) is not applicable
      (actual and formal argument lists differ in length)
    constructor org.apache.commons.math3.geometry.euclidean.oned.Vector1D.Vector1D(double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D) is not applicable
      (actual and formal argument lists differ in length)
    constructor org.apache.commons.math3.geometry.euclidean.oned.Vector1D.Vector1D(double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D) is not applicable
      (actual and formal argument lists differ in length)
    constructor org.apache.commons.math3.geometry.euclidean.oned.Vector1D.Vector1D(double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D) is not applicable
      (actual and formal argument lists differ in length)
    constructor org.apache.commons.math3.geometry.euclidean.oned.Vector1D.Vector1D(double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D) is not applicable
      (actual and formal argument lists differ in length)
CodexTest_0_9_71.java:34: error: incompatible types: double cannot be converted to org.apache.commons.math3.geometry.euclidean.oned.Vector1D
        final Vector1D pEnd = Vector1D.distanceSq(pStart, p);
                                                 ^
CodexTest_0_9_71.java:37: error: double cannot be dereferenced
            pTest = Vector1D.distanceSq(pStart.add(Vector1D.distanceSq(((Vector1D.distanceSq(pEnd, pStart).add(pStart)).subtract(pStart)), t)), p);
                                                                                                          ^
Note: CodexTest_0_9_71.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.