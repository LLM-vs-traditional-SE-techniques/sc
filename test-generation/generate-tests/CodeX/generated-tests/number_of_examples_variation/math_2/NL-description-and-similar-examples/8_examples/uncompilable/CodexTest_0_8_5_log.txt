isCompilable => false
CodexTest_0_8_5.java:31: error: no suitable constructor found for Vector1D(int,int,int)
        Vector1D v1 = new Vector1D(1, 2, 1);
                      ^
    constructor org.apache.commons.math3.geometry.euclidean.oned.Vector1D.Vector1D(double) is not applicable
      (actual and formal argument lists differ in length)
    constructor org.apache.commons.math3.geometry.euclidean.oned.Vector1D.Vector1D(double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D) is not applicable
      (actual and formal argument lists differ in length)
    constructor org.apache.commons.math3.geometry.euclidean.oned.Vector1D.Vector1D(double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D) is not applicable
      (actual and formal argument lists differ in length)
    constructor org.apache.commons.math3.geometry.euclidean.oned.Vector1D.Vector1D(double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D) is not applicable
      (actual and formal argument lists differ in length)
    constructor org.apache.commons.math3.geometry.euclidean.oned.Vector1D.Vector1D(double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D) is not applicable
      (actual and formal argument lists differ in length)
CodexTest_0_8_5.java:32: error: no suitable constructor found for Vector1D(int,int,int)
        Vector1D v2 = new Vector1D(-4, 1, 3);
                      ^
    constructor org.apache.commons.math3.geometry.euclidean.oned.Vector1D.Vector1D(double) is not applicable
      (actual and formal argument lists differ in length)
    constructor org.apache.commons.math3.geometry.euclidean.oned.Vector1D.Vector1D(double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D) is not applicable
      (actual and formal argument lists differ in length)
    constructor org.apache.commons.math3.geometry.euclidean.oned.Vector1D.Vector1D(double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D) is not applicable
      (actual and formal argument lists differ in length)
    constructor org.apache.commons.math3.geometry.euclidean.oned.Vector1D.Vector1D(double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D) is not applicable
      (actual and formal argument lists differ in length)
    constructor org.apache.commons.math3.geometry.euclidean.oned.Vector1D.Vector1D(double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D) is not applicable
      (actual and formal argument lists differ in length)
CodexTest_0_8_5.java:33: error: cannot find symbol
        Assert.assertEquals(0.0, Vector3D.distanceSq(new Vector3D(-1), new Vector3D(-1)), 0);
                                                         ^
  symbol:   class Vector3D
  location: class CodexTest_0_8_5
CodexTest_0_8_5.java:33: error: cannot find symbol
        Assert.assertEquals(0.0, Vector3D.distanceSq(new Vector3D(-1), new Vector3D(-1)), 0);
                                                                           ^
  symbol:   class Vector3D
  location: class CodexTest_0_8_5
CodexTest_0_8_5.java:33: error: cannot find symbol
        Assert.assertEquals(0.0, Vector3D.distanceSq(new Vector3D(-1), new Vector3D(-1)), 0);
                                 ^
  symbol:   variable Vector3D
  location: class CodexTest_0_8_5
CodexTest_0_8_5.java:34: error: cannot find symbol
        Assert.assertEquals(v1.subtract(v2).getNormSq(), Vector3D.distanceSq(v1, v2), 1.0e-12);
                                                         ^
  symbol:   variable Vector3D
  location: class CodexTest_0_8_5