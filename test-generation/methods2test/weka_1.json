{
	"project": "Weka",
	"package": "weka.core",
	"class": "AlgVector",
	"method_signature": "AlgVector add(AlgVector other)",
	"method": "public final AlgVector add(AlgVector other) {\n     AlgVector b = null;\n    if (m_Elements != null) {\n      int n = m_Elements.length;\n       try {\n	b = (AlgVector)clone();\n      } catch (CloneNotSupportedException ex) {\n	b = new AlgVector(n);\n      }\n          for(int i = 0; i < n; i++) {\n	b.m_Elements[i] = m_Elements[i] + other.m_Elements[i];\n      }\n    }\n       return b;\n  }",
	"helpers": ["int numElements()", "AlgVector(int n)"],
	"example_same_class": {
		"method_signature": "int numElements()",
		"method": "public final int numElements() {\n      return m_Elements.length;\n  }",
		"test": "public void testLengthConstructor() {\n    int len = 22;\n    AlgVector v = new AlgVector(len);\n    assertEquals(\"Length differs\", len, v.numElements());\n  }"
	},
	"example_different_project": {
		"id": "elasticsearch_2",
		"method_signature": "IndexRequest opType(String opType)",
		"method": "public IndexRequest opType(String opType) {\n        String op = opType.toLowerCase(Locale.ROOT);\n        if (op.equals(\"create\")) {\n            opType(OpType.CREATE);\n        } else if (op.equals(\"index\")) {\n            opType(OpType.INDEX);\n        } else {\n            throw new IllegalArgumentException(\"opType must be 'create' or 'index', found: [\" + opType + \"]\");\n        }\n        return this;\n    }",
		"test": "public void testReadBogusString() {\n        try {\n            IndexRequest indexRequest = new IndexRequest(\"\");\n            indexRequest.opType(\"foobar\");\n            fail(\"Expected IllegalArgumentException\");\n        } catch (IllegalArgumentException e) {\n            assertThat(e.getMessage(), equalTo(\"opType must be 'create' or 'index', found: [foobar]\"));\n        }    }"
	},
	"method_class_imports": "import weka.core.*;\nimport java.io.Serializable;\nimport java.util.Random;",
	"test_class_imports": "import weka.core.*;\nimport java.util.Random;\nimport junit.framework.TestCase;\nimport junit.framework.TestSuite;"
}