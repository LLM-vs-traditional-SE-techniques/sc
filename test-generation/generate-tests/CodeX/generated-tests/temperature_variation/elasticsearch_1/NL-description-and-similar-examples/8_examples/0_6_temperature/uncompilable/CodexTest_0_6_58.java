import org.elasticsearch.action.index.*;
import org.elasticsearch.ElasticsearchGenerationException;
import org.elasticsearch.Version;
import org.elasticsearch.action.ActionRequestValidationException;
import org.elasticsearch.action.CompositeIndicesRequest;
import org.elasticsearch.action.DocWriteRequest;
import org.elasticsearch.action.RoutingMissingException;
import org.elasticsearch.action.support.replication.ReplicatedWriteRequest;
import org.elasticsearch.action.support.replication.ReplicationRequest;
import org.elasticsearch.client.Requests;
import org.elasticsearch.cluster.metadata.MappingMetaData;
import org.elasticsearch.cluster.metadata.MetaData;
import org.elasticsearch.common.Nullable;
import org.elasticsearch.common.UUIDs;
import org.elasticsearch.common.bytes.BytesArray;
import org.elasticsearch.common.bytes.BytesReference;
import org.elasticsearch.common.io.stream.StreamInput;
import org.elasticsearch.common.io.stream.StreamOutput;
import org.elasticsearch.common.lucene.uid.Versions;
import org.elasticsearch.common.unit.ByteSizeValue;
import org.elasticsearch.common.unit.TimeValue;
import org.elasticsearch.common.xcontent.XContentBuilder;
import org.elasticsearch.common.xcontent.XContentFactory;
import org.elasticsearch.common.xcontent.XContentHelper;
import org.elasticsearch.common.xcontent.XContentType;
import org.elasticsearch.index.IndexSettings;
import org.elasticsearch.index.VersionType;
import org.elasticsearch.index.shard.ShardId;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.util.Locale;
import java.util.Map;
import java.util.Objects;
import static org.elasticsearch.action.ValidateActions.addValidationError;
import java.util.*;

import org.elasticsearch.Version;
import org.elasticsearch.action.ActionRequestValidationException;
import org.elasticsearch.action.DocWriteRequest;
import org.elasticsearch.action.support.ActiveShardCount;
import org.elasticsearch.action.support.replication.ReplicationResponse;
import org.elasticsearch.common.bytes.BytesArray;
import org.elasticsearch.common.io.stream.BytesStreamOutput;
import org.elasticsearch.common.io.stream.StreamInput;
import org.elasticsearch.common.unit.ByteSizeValue;
import org.elasticsearch.common.xcontent.XContentType;
import org.elasticsearch.index.VersionType;
import org.elasticsearch.index.seqno.SequenceNumbers;
import org.elasticsearch.index.shard.ShardId;
import org.elasticsearch.rest.RestStatus;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.util.Arrays;
import java.util.HashSet;
import java.util.Set;
import static org.junit.Assert.*;
import org.junit.Test;

import org.junit.*;


public class CodexTest_0_6_58 { 
  @Test
             public void testParent() {
                String parent = "parent";
                String parent1 = "parent1";
                String name = "name";
                String name1 = "name1";
                String format = "format";
                String format1 = "format1";
                String type = "type";
                String type1 = "type1";
                String text = "text";
                String text1 = "text1";
                String id = "id";
                String id1 = "id1";
                String title = "title";
                String title1 = "title1";
                String description = "description";
                String description1 = "description1";
                String key = "key";
                String key1 = "key1";
                String required = "required";
                String required1 = "required1";
                String defaultValue = "defaultValue";
                String defaultValue1 = "defaultValue1";
                String enumValues = "enumValues";
                String enumValues1 = "enumValues1";
                String readOnly = "readOnly";
                String readOnly1 = "readOnly1";
                String example = "example";
                String example1 = "example1";
                String minLength = "minLength";
                String minLength1 = "minLength1";
                String maxLength = "maxLength";
                String maxLength1 = "maxLength1";
                String minimum = "minimum";
                String minimum1 = "minimum1";
                String maximum = "maximum";
                String maximum1 = "maximum1";
                String exclusiveMinimum = "exclusiveMinimum";
                String exclusiveMinimum1 = "exclusiveMinimum1";
                String exclusiveMaximum = "exclusiveMaximum";
                String exclusiveMaximum1 = "exclusiveMaximum1";
                String minItems = "minItems";
                String minItems1 = "minItems1";
                String maxItems = "maxItems";
                String maxItems1 = "maxItems1";
                String uniqueItems = "uniqueItems";
                String uniqueItems1 = "uniqueItems1";
                String multipleOf = "multipleOf";
                String multipleOf1 = "multipleOf1";
                String pattern = "pattern";
                String pattern1 = "pattern1
}